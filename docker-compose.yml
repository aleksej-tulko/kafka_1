services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.10
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 20
      ZOOKEEPER_SYNC_LIMIT: 5
    volumes:
      - /opt/zookeeper/data:/var/lib/zookeeper/data
      - /opt/zookeeper/log:/var/lib/zookeeper/log
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "bash", "-c", "zookeeper-shell localhost:2181 ls /"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  kafka_1:
    image: confluentinc/cp-kafka:7.0.10
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_1:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /opt/kafka/kafka_1:/var/lib/kafka/data
    networks:
      - kafka-network
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "/usr/bin/kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 60s
      retries: 3
      start_period: 20s
    restart: always

  kafka_2:
    image: confluentinc/cp-kafka:7.0.10
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,EXTERNAL://0.0.0.0:9095
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_2:9094,EXTERNAL://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /opt/kafka/kafka_2:/var/lib/kafka/data
    networks:
      - kafka-network
    ports:
      - "9094:9094"
      - "9095:9095"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "/usr/bin/kafka-topics --bootstrap-server localhost:9094 --list"]
      interval: 30s
      timeout: 60s
      retries: 3
      start_period: 20s
    restart: always

  kafka_3:
    image: confluentinc/cp-kafka:7.0.10
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9096,EXTERNAL://0.0.0.0:9097
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_3:9096,EXTERNAL://localhost:9097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /opt/kafka/kafka_3:/var/lib/kafka/data
    networks:
      - kafka-network
    ports:
      - "9096:9096"
      - "9097:9097"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "/usr/bin/kafka-topics --bootstrap-server localhost:9096 --list"]
      interval: 30s
      timeout: 60s
      retries: 3
      start_period: 20s
    restart: always

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      kafka_1:
        condition: service_healthy
      kafka_2:
        condition: service_healthy
      kafka_3:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/subjects"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka_1:9092,PLAINTEXT://kafka_2:9094,PLAINTEXT://kafka_3:9096
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-ui:
    image: provectuslabs/kafka-ui
    networks:
      - kafka-network
    depends_on:
      kafka_1:
        condition: service_healthy
      kafka_2:
        condition: service_healthy
      kafka_3:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka_1:9092,kafka_2:9094,kafka_3:9096
      KAFKA_CLUSTERS_0_KSQLDBSERVER: http://ksqldb-server:8088
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    networks:
     - kafka-network
    depends_on:
      schema-registry:
        condition: service_healthy
      kafka_1:
        condition: service_healthy
      kafka_2:
        condition: service_healthy
      kafka_3:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 2

  ksqldb-server:
    image: confluentinc/ksqldb-server:latest
    depends_on:
      kafka_1:
        condition: service_healthy
      kafka_2:
        condition: service_healthy
      kafka_3:
        condition: service_healthy
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka_1:9092,kafka_2:9094,kafka_3:9096
    ports:
      - "8088:8088"
    networks:
      - kafka-network

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:latest
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh -c 'exec ksql http://ksqldb-server:8088'
    stdin_open: true
    tty: true
    networks:
      - kafka-network

networks:
  kafka-network:
    external: true